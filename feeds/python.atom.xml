<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Opdev.cn - Python</title><link href="http://www.opdev.cn/" rel="alternate"></link><link href="http://www.opdev.cn/feeds/python.atom.xml" rel="self"></link><id>http://www.opdev.cn/</id><updated>2015-12-29T11:37:19+08:00</updated><entry><title>Python编程规范(PEP8)</title><link href="http://www.opdev.cn/python/python-pep8.html" rel="alternate"></link><published>2015-12-29T11:37:19+08:00</published><updated>2015-12-29T11:37:19+08:00</updated><author><name>zheng</name></author><id>tag:www.opdev.cn,2015-12-29:/python/python-pep8.html</id><summary type="html">&lt;p&gt;转载，原作者找不到了，官网规范：&lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;代码布局&lt;/h3&gt;
&lt;h4&gt;缩进&lt;/h4&gt;
&lt;p&gt;对于每一次缩进使用4个空格。使用括号、中括号、大括号进行垂直对齐，或者缩进对齐。&lt;/p&gt;
&lt;h4&gt;制表符还是空格?&lt;/h4&gt;
&lt;p&gt;永远不要将制表符与空格混合使用。Python最常用的缩进方式是只是用空格 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;转载，原作者找不到了，官网规范：&lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;https://www.python.org/dev/peps/pep-0008/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;代码布局&lt;/h3&gt;
&lt;h4&gt;缩进&lt;/h4&gt;
&lt;p&gt;对于每一次缩进使用4个空格。使用括号、中括号、大括号进行垂直对齐，或者缩进对齐。&lt;/p&gt;
&lt;h4&gt;制表符还是空格?&lt;/h4&gt;
&lt;p&gt;永远不要将制表符与空格混合使用。Python最常用的缩进方式是只是用空格。&lt;/p&gt;
&lt;p&gt;当调用Python命令行的 -t 选项时，它会检测并警告代码非法混合使用制表符和空格。当使用 -tt 选项时，警告变成了错误。&lt;/p&gt;
&lt;h4&gt;最大行长度&lt;/h4&gt;
&lt;p&gt;限制所有行最长为79个字符。&lt;/p&gt;
&lt;p&gt;使用反斜杠来分行是一个很好的选择。&lt;/p&gt;
&lt;p&gt;我们应当选择在二元操作符之后进行分行，而不是之前。&lt;/p&gt;
&lt;h4&gt;空行&lt;/h4&gt;
&lt;p&gt;使用两行空行来分隔顶层函数和类定义。&lt;/p&gt;
&lt;p&gt;使用单行空行来分隔类方法定义。&lt;/p&gt;
&lt;p&gt;在函数中使用空行来表示不同的逻辑块。&lt;/p&gt;
&lt;h4&gt;编码&lt;/h4&gt;
&lt;p&gt;Python核心发行代码里面优先使用ASCII码或Latin-1编码。3.0后UTF-8编码优先于Latin-1。&lt;/p&gt;
&lt;h4&gt;导入&lt;/h4&gt;
&lt;p&gt;每一个导入通常应当使用单独的行。&lt;/p&gt;
&lt;p&gt;导入应当位于文件顶部，在模块注释和文档字符串之后，在全局变量和常量之前。&lt;/p&gt;
&lt;p&gt;导入应当按以下顺序分组，且每组导入之间使用空行隔开：&lt;/p&gt;
&lt;p&gt;1、标准库导入&lt;/p&gt;
&lt;p&gt;2、第三方库导入&lt;/p&gt;
&lt;p&gt;3、本地应用程序/定制库导入&lt;/p&gt;
&lt;p&gt;使用绝对包路径导入。&lt;/p&gt;
&lt;p&gt;表达式和语句中的空格&lt;/p&gt;
&lt;h4&gt;注释&lt;/h4&gt;
&lt;p&gt;误导的注释不如没有注释&lt;/p&gt;
&lt;p&gt;注释应当为完整的句子，且句号结尾的句子后面应当有2个空格。如果注释很短，那么结尾的句号可以忽略。&lt;/p&gt;
&lt;h4&gt;块注释&lt;/h4&gt;
&lt;p&gt;块注释应当和代码缩进保持一致。每行注释开头应以#开头，然后紧跟一个空格。&lt;/p&gt;
&lt;h4&gt;行注释&lt;/h4&gt;
&lt;p&gt;行注释至少和语句间隔2个空格。同样的注释应当以#开头，然后紧跟一个空格。&lt;/p&gt;
&lt;h4&gt;文档字符串&lt;/h4&gt;
&lt;p&gt;对于所有的公有模块、类、函数和方法都需要编写文档字符串。&lt;/p&gt;
&lt;p&gt;""" 作为多行的文档字符串的结束，应该单独一行，并且之前有一个空行。&lt;/p&gt;
&lt;p&gt;对于只有一行的文档字符串来说，结尾的 """ 在同一行。&lt;/p&gt;
&lt;p&gt;更详细的文档字符串规范见 PEP 257。&lt;/p&gt;
&lt;h3&gt;命名规范&lt;/h3&gt;
&lt;p&gt;目前Python库的命名规范尚未达成一致，但有一些推荐的标准。&lt;/p&gt;
&lt;p&gt;在Python里面，有一些具有特定意义的下划线前缀或者后继的特殊格式。如：&lt;/p&gt;
&lt;p&gt;1、_single_leading_underscore：（单下划线开始）弱"内部使用"指示器。例如：from M import * 不会导入以下划线开始的对象。&lt;/p&gt;
&lt;p&gt;2、single_trailing_underscore_：（单下划线结束）规定使用其来避免与Python关键字冲突，例如：&lt;/p&gt;
&lt;p&gt;Tkinter.Toplevel(master, class_='ClassName') 在参数class后面加单下划线，避免与关键字class冲突&lt;/p&gt;
&lt;p&gt;3、__double_leading_underscore：（双下划线开始）命名一个类的属性时，调用"name mangling"（类FooBar中，__boo 变为了 _FooBar__boo; 见下文）&lt;/p&gt;
&lt;p&gt;4、&lt;strong&gt;double_leading_and_trailing_underscore&lt;/strong&gt;：（双下划线开始和结束）存活在用户控制命名空间的"magic"对象或属性。 例如__init__, &lt;strong&gt;import&lt;/strong&gt; 或 &lt;strong&gt;file&lt;/strong&gt;。永远不要起这样的名字。&lt;/p&gt;
&lt;h4&gt;避免使用的命名&lt;/h4&gt;
&lt;p&gt;不要使用小写的L、大写的O、以及大写的I作为单字符变量名。&lt;/p&gt;
&lt;h4&gt;包与模块名称&lt;/h4&gt;
&lt;p&gt;模块应当使用简短、全小写的名字，也可使用下划线连接来提高可读性。&lt;/p&gt;
&lt;p&gt;包也应当使用简短、全小写的名字，但不要使用下划线。&lt;/p&gt;
&lt;p&gt;这是由于模块名与文件名关联，而在某些文件系统中大小写不敏感，且会截断过长的名字。&lt;/p&gt;
&lt;p&gt;当使用C/C++来编写一个扩展模块时，应当使用下划线作为模块名的前缀。&lt;/p&gt;
&lt;h4&gt;类名&lt;/h4&gt;
&lt;p&gt;类名应当使用驼峰式（CapWords）。内部使用的类名应当加下划线前缀。&lt;/p&gt;
&lt;h4&gt;异常名&lt;/h4&gt;
&lt;p&gt;异常也是一个类，所以需要遵循类名规则。但如果你的异常确实是个错误的话，请使用Error前缀。&lt;/p&gt;
&lt;h4&gt;全局变量名&lt;/h4&gt;
&lt;p&gt;遵循函数规则。&lt;/p&gt;
&lt;h4&gt;函数名&lt;/h4&gt;
&lt;p&gt;函数名全小写，可以使用下划线分隔来提高可读性。&lt;/p&gt;
&lt;h4&gt;函数与方法参数&lt;/h4&gt;
&lt;p&gt;使用self作为实例方法的第一个参数。&lt;/p&gt;
&lt;p&gt;使用cls作为类方法的第一个参数。&lt;/p&gt;
&lt;p&gt;当函数的参数名与保留字冲突时，使用下划线后缀（第二次提醒）。&lt;/p&gt;
&lt;h4&gt;方法名与实例变量&lt;/h4&gt;
&lt;p&gt;遵循函数规则。&lt;/p&gt;
&lt;p&gt;在私有方法和实例变量前用单下划线前缀。&lt;/p&gt;
&lt;p&gt;使用双下划线前缀来调用"name mangling"来避免与子类命名冲突。&lt;/p&gt;
&lt;p&gt;如果类Foo有个属性叫__a，那么它不能使用Foo.__a读取，但仍然可以Foo._Foo__a来读取。&lt;/p&gt;
&lt;h4&gt;常量&lt;/h4&gt;
&lt;p&gt;常量通常在模块级别定义，使用全大写和下划线分隔的形式。&lt;/p&gt;
&lt;h4&gt;继承设计&lt;/h4&gt;
&lt;p&gt;在设计类的方法或实例变量时，应当觉得其实公有的还是非公有的。当不能确定时，设计为私有的。&lt;/p&gt;
&lt;p&gt;在Python中没有真正的私有属性。&lt;/p&gt;
&lt;p&gt;公有属性不应当使用下划线开始。&lt;/p&gt;
&lt;p&gt;当公有属性与保留字冲突时，在名称后面加下划线后缀（第三次提醒）。&lt;/p&gt;
&lt;p&gt;对于简单的公有属性，最好直接访问其属性名，而非get/set方法。&lt;/p&gt;
&lt;h3&gt;编程建议&lt;/h3&gt;
&lt;p&gt;代码应当适用于Python的多个实现。比如不要依赖CPython的高效字符串语句 a+=b，而应当使用join，从而保证在不同实现上的线性开销。&lt;/p&gt;
&lt;p&gt;当与类似于None的单例（singleton)进行比较式，要使用is 或者 is not， 而不是使用等于操作。&lt;/p&gt;
&lt;p&gt;当使用复杂比较实现排序操作时，最好实现全部的六个比较操作。&lt;/p&gt;
&lt;p&gt;使用基于对象的异常。&lt;/p&gt;
&lt;p&gt;模块或者包应当定义自己的异常基类，这个类应当继承自内置的Exception类。&lt;/p&gt;
&lt;p&gt;当抛出一个异常的时候，使用raise ValueError('message')代替旧的raise ValueError, 'message'格式。这是由于当异常的参数很长或者是格式化字符串的时候，由于括号的关系，我们不需要使用多行连接符。 旧的格式在Python 3 中被移除。&lt;/p&gt;
&lt;p&gt;当捕获一个异常的时候，要用详细的异常声明来代替简单的except: 语句。&lt;/p&gt;
&lt;p&gt;一个空的except:语句将会捕获 SystemExit 和 KeyboardInterrrupt 异常。这会使得很难用Control-C来中断一个程序，并且还会隐藏其他的问题。&lt;/p&gt;
&lt;p&gt;另外，对于所有的try/except语句，限制try语句来减少必要代码的数量。 再者，可以避免掩盖问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Yes:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;collection&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;except&lt;/span&gt; &lt;span class="n"&gt;KeyError&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;key_not_found&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;handle_value&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;No:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;try:&lt;/span&gt;
&lt;span class="code-line"&gt;    # Too broad!&lt;/span&gt;
&lt;span class="code-line"&gt;    return handle_value(collection[key])&lt;/span&gt;
&lt;span class="code-line"&gt;except KeyError:&lt;/span&gt;
&lt;span class="code-line"&gt;    # Will also catch KeyError raised by handle_value()&lt;/span&gt;
&lt;span class="code-line"&gt;    return key_not_found(key)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用''.startswith() 和 ''.endswith()而非字符切片去检测前缀或后缀。&lt;/p&gt;
&lt;p&gt;对象类型比较总要用 isinstance() 而非直接比较。&lt;/p&gt;
&lt;p&gt;对于序列，(strings, lists, tuples)，利用空序列为false这一点来进行判断，而非使用长度来判断。&lt;/p&gt;
&lt;p&gt;别用‘==’进行布尔值和 True 或者 False 的比较。&lt;/p&gt;</content><category term="Python"></category><category term="PEP8"></category></entry><entry><title>python转换MP3文件为base64编码</title><link href="http://www.opdev.cn/python/python-base64.html" rel="alternate"></link><published>2014-07-27T13:39:49+08:00</published><updated>2014-07-27T13:39:49+08:00</updated><author><name>zheng</name></author><id>tag:www.opdev.cn,2014-07-27:/python/python-base64.html</id><summary type="html">&lt;p&gt;最近看到一个好玩的js库&lt;strong&gt;&lt;a href="http://code.onion.com/fartscroll.js"&gt;fartscroll.js&lt;/a&gt;&lt;/strong&gt;，可以让你页面每下拉一点就听到一声屁响。于是研究了一下工作原理：&lt;/p&gt;
&lt;p&gt;滚动后向 HTML 文档中添加了 audio 元素，并且使用base64编码。使用 base64 编码的方式，避免了加载外部的音频资源。&lt;/p&gt;
&lt;p&gt;演示地址：&lt;a href="http://www.opdev.cn/admin/"&gt;http://www.opdev.cn …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近看到一个好玩的js库&lt;strong&gt;&lt;a href="http://code.onion.com/fartscroll.js"&gt;fartscroll.js&lt;/a&gt;&lt;/strong&gt;，可以让你页面每下拉一点就听到一声屁响。于是研究了一下工作原理：&lt;/p&gt;
&lt;p&gt;滚动后向 HTML 文档中添加了 audio 元素，并且使用base64编码。使用 base64 编码的方式，避免了加载外部的音频资源。&lt;/p&gt;
&lt;p&gt;演示地址：&lt;a href="http://www.opdev.cn/admin/"&gt;http://www.opdev.cn/admin/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想自定义声音，怎么转换为Base64编码？&lt;/p&gt;
&lt;h2&gt;用python获得Base64编码后的字符串:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/tmp/Teemo.mp3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#二进制方式打开MP3文件&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;mp3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c1"&gt;#读取文件内容，转换为base64编码&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;mp3&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="fartscroll.js"></category></entry><entry><title>python版微信企业号发送报警信息</title><link href="http://www.opdev.cn/python/python-wechat.html" rel="alternate"></link><published>2013-05-06T00:25:50+08:00</published><updated>2013-05-06T00:25:50+08:00</updated><author><name>zheng</name></author><id>tag:www.opdev.cn,2013-05-06:/python/python-wechat.html</id><summary type="html">&lt;p&gt;今天在群里看到有人问：微信如何发送报警信息，自己简单看了下。&lt;/p&gt;
&lt;h3&gt;注册体验号&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;地址：&lt;a href="http://qydev.weixin.qq.com/try?t=experience"&gt;http://qydev.weixin.qq.com/try?t=experience&lt;/a&gt;进行注册操作，默认有90天的期限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import …&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天在群里看到有人问：微信如何发送报警信息，自己简单看了下。&lt;/p&gt;
&lt;h3&gt;注册体验号&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;地址：&lt;a href="http://qydev.weixin.qq.com/try?t=experience"&gt;http://qydev.weixin.qq.com/try?t=experience&lt;/a&gt;进行注册操作，默认有90天的期限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setdefaultencoding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;微信接口发送消息&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;corp_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;corp_secret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corp_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;corp_id&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corp_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;corp_secret&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;baseurl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid={0}&amp;amp;corpsecret={1}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corp_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corp_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#获取AccessToken&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;baseurl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;token_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;token_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;errcode&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;token_json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;token_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errmsg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;token_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="c1"&gt;#发送消息&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_token&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="s2"&gt;&amp;quot;touser&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;@all&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="s2"&gt;&amp;quot;msgtype&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="s2"&gt;&amp;quot;agentid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               &lt;span class="s2"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="s2"&gt;&amp;quot;safe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;send_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ensure_ascii&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;send_request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;send_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;send_request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="c1"&gt;# 返回微信公共平台的信息&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;corpid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的corpid&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;corpsecret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;你的corpsecret&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; [擦汗][擦汗] Nagios 警报 [擦汗][擦汗] &lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;类型 : RECOVERY &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;主机 : web-001&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;状态 : UP&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;地址 : 192.168.1.1&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;日志 : OK - load average: 0.00, 0.00, 0.00&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;时间 : Mon May 5 15:10:18 CST 2015 &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;get_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corpid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;corpsecret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;get_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;演示效果&lt;/h3&gt;
&lt;p&gt;&lt;img alt="test wechat" src="/images/python/8931c31a-2191-11e5-af4d-8651a0f24eb4.png"&gt;&lt;/p&gt;</content><category term="Python"></category></entry></feed>